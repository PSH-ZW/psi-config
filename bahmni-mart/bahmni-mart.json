{
  "jobs": [
    {
      "name": "Programs",
      "type": "programs",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Patients",
      "type": "patients",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Appointments",
      "type": "appointments",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "appointment_service_default",
          "columnsToIgnore": [
          ]
        }
      ]
    },
    {
      "name": "Bed Management",
      "type": "bedManagement",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Location",
      "type": "location",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Operation Theater",
      "type": "operationTheater",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Person",
      "type": "person",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "person_attributes",
          "columnsToIgnore": [
            "primaryContact",
            "secondaryContact",
            "primaryRelative",
            "familyNameLocal",
            "givenNameLocal",
            "middleNameLocal"
          ]
        },
        {
          "tableName": "person_details_default",
          "columnsToIgnore": [
            "prefix",
            "given_name",
            "middle_name",
            "family_name_prefix",
            "family_name",
            "family_name2",
            "family_name_suffix"
          ]
        }
      ]
    },
    {
      "name": "Provider",
      "type": "provider",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Visits And Encounters",
      "type": "visitsAndEncounters",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Medication And Orders",
      "type": "medicationAndOrders",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "medication_data_default",
          "columnsToIgnore": [
            "instructions",
            "stop_notes"
          ]
        }
      ]
    },
    {
      "name": "Diagnoses And Conditions",
      "type": "diagnosesAndConditions",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Bacteriology Data",
      "conceptReferenceSource": "",
      "type": "bacteriology",
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "MetaData Dictionary",
      "type": "metadata",
      "conceptReferenceSource": ""
    },
    {
      "name": "Obs Data",
      "type": "obs",
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      },
      "separateTableConfig": {
        "enableForAddMoreAndMultiSelect": true,
        "separateTables": [
        ]
      },
      "conceptReferenceSource": "",
      "ignoreAllFreeTextConcepts": true,
      "columnsToIgnore": [
        "Image"
      ]
    },
    {
      "name": "Registration Second Page",
      "type": "reg",
      "columnsToIgnore": [],
      "separateTableConfig": {
        "enableForAddMoreAndMultiSelect": true,
        "separateTables": []
      },
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "Disposition Data",
      "type": "disposition",
      "columnsToIgnore": [],
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "HTS_instance_table_creation",
      "type": "customSql",
      "readerSql": "select              
                    pi.patient_id as \"Patient ID\",
                    piUIC.identifier as \"UIC\",
                    per.birthdate as \"Date of Birth\",
                    per.gender as \"Gender\",
                    TIMESTAMPDIFF(YEAR, per.birthdate, CURDATE()) as \"Age\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Outreach' and retired = 0)
                    AND perAdd.city_village not like 'Other%'
                    then concat('ZWNSC-OU-',perAdd.address2,'-',upper(perAdd.city_village))
                    ELSE concat('ZWNSC-',perAdd.address2) 
                    end) as \"OrgUnit\",
                    pi.identifier as \"Patient Identifier\",
                    personInstanceDateChanged.dateChanged as \"date_created\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select 
                                        pid as person_id,
                                        max(DateChanged) as dateChanged 
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                        union all
                                        /*HTS Type of visit with min obs date time*/
                                        select person_id as pid, min(obs_datetime) dateChanged from obs 
                                                    where concept_id = (Select concept_id from 
                                                    concept_name 
                                                    where name ='Reason for visit' 
                                                    and concept_name_type='FULLY_SPECIFIED'
                                                    and voided=0) 
                                                    and value_coded IN (Select concept_id from
                                                concept_name 
                                                where name in ('HIV Self Testing','Provider Testing and Counseling','Confirmatory HIV testing and Counseling') 
                                                and concept_name_type='FULLY_SPECIFIED'
                                                and voided=0)
                                                and voided = 0
                                                    group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt 
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    where pi.patient_id in ( /*Filtering the HTS patients using type of visit*/
                                                Select person_id from obs htsObs where htsObs.concept_id in (
                                                    Select concept_id from 
                                                    concept_name 
                                                    where name ='Reason for visit' 
                                                    and concept_name_type='FULLY_SPECIFIED'
                                                    and voided=0
                                                )
                                                and htsObs.value_coded in (
                                                Select concept_id from
                                                concept_name 
                                                where name in ('HIV Self Testing','Provider Testing and Counseling','Confirmatory HIV testing and Counseling') 
                                                and concept_name_type='FULLY_SPECIFIED'
                                                and voided=0
                                               )
                                               and htsObs.voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "hts_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "HTS_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select 
                    pi.identifier as \"Patient_Identifier\",
                    case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Outreach' and retired = 0)
                    AND perAdd.city_village not like 'Other%'
                    then concat('ZWNSC-OU-',perAdd.address2,'-',upper(perAdd.city_village))
                    ELSE concat('ZWNSC-',perAdd.address2) 
                    end as \"OrgUnit\",
                    'HTSDeId' as program,
                    min(date(htsObs.obs_datetime)) as \"enrollment_date\",
                    min(date(htsObs.obs_datetime)) as \"incident_date\",
                    min(htsObs.date_created) as \"date_created\",
                    min(v.visit_id) as \"program_unique_id\", 
                    'ACTIVE' as status
                        from obs htsObs/*obs for the patients for whom the HTS visit type was selected*/
                        inner join person_address perAdd on htsObs.person_id = perAdd.person_id
                        Inner Join patient_identifier pi on htsObs.person_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id 
                                        from patient_identifier_type 
                                        where name = 'Patient Identifier' 
                                        and retired=0
                                              )
                  INNER JOIN encounter e on htsObs.encounter_id = e.encounter_id                           
                  INNER JOIN visit v on e.visit_id = v.visit_id
                  LEFT JOIN (/*Patient id along with the site type value*/
                  Select perAtt.person_id,
                  perAtt.value as 'siteType' 
                  from person_attribute perAtt 
                  inner JOIN person_attribute_type perAtttype 
                  on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                  where  perAtttype.name = 'Site Type'
                ) as patientSitetype
                      On patientSitetype.person_id = htsObs.person_id
                      where htsObs.concept_id in (
                        Select concept_id from 
                        concept_name 
                        where name ='Reason for visit' 
                        and concept_name_type='FULLY_SPECIFIED'
                        and voided=0
                                                  )
                and htsObs.value_coded in (
                    Select concept_id from
                    concept_name 
                    where name in ('HIV Self Testing','Provider Testing and Counseling','Confirmatory HIV testing and Counseling') 
                    and concept_name_type='FULLY_SPECIFIED'
                    and voided=0
                   )
                and htsObs.voided=0
                group by htsObs.person_id",
      "tableName": "hts_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "HTS_event_table_creation",
      "type": "customSql",
      "readerSql":  "Select 
                    pi.identifier as \"Patient_Identifier\",
                    'HTSDeId' as program,
                    'HTSDeId' as program_stage,
                    case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Outreach' and retired = 0)
                    AND perAdd.city_village not like 'Other%'
                    then concat('ZWNSC-OU-',perAdd.address2,'-',upper(perAdd.city_village))
                    ELSE concat('ZWNSC-',perAdd.address2) 
                    end as \"OrgUnit\",
                    max(date(obsPHTC.obs_datetime)) as \"event_date\",
                    'ACTIVE' as status,
                    v.visit_id as \"event_unique_id\",
                    min(date(htsObs.obs_datetime)) as \"enrollment_date\",
                    max(obsPHTC.date_created) as \"date_created\",
                    case
                            when obsPHTC.value_coded = (select concept_id from concept_view where concept_full_name = 'Yes' and retired = 0) then 'true'
                            when obsPHTC.value_coded = (select concept_id from concept_view where concept_full_name = 'No' and retired = 0) THEN 'false'
                            end as \"phtc\"
                        from obs htsObs/*obs for the patients for whom the HTS visit type was selected*/
                        inner join person_address perAdd on htsObs.person_id = perAdd.person_id
                        Inner Join patient_identifier pi on htsObs.person_id = pi.patient_id
                        INNER JOIN obs obsPHTC on pi.patient_id = obsPHTC.person_id
                        INNER JOIN encounter e on obsPHTC.encounter_id = e.encounter_id                 
                        INNER JOIN visit v on e.visit_id = v.visit_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id 
                                        from patient_identifier_type 
                                        where name = 'Patient Identifier' 
                                        and retired=0
                                              )
                  LEFT JOIN (/*Patient id along with the site type value*/
                  Select perAtt.person_id,
                  perAtt.value as 'siteType' 
                  from person_attribute perAtt 
                  inner JOIN person_attribute_type perAtttype 
                  on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                  where  perAtttype.name = 'Site Type'
                ) as patientSitetype
                      On patientSitetype.person_id = htsObs.person_id
                      where htsObs.concept_id in (
                        Select concept_id from 
                        concept_name 
                        where name ='Reason for visit' 
                        and concept_name_type='FULLY_SPECIFIED'
                        and voided=0
                                                  )
                and htsObs.value_coded in (
                    Select concept_id from
                    concept_name 
                    where name in ('HIV Self Testing','Provider Testing and Counseling','Confirmatory HIV testing and Counseling') 
                    and concept_name_type='FULLY_SPECIFIED'
                    and voided=0
                   )
                   and obsPHTC.concept_id = (
                        Select concept_id from 
                        concept_name 
                        where name ='PHTC, Client received post test counseling?'
                        and concept_name_type='FULLY_SPECIFIED'
                        and voided=0
                               )
                and obsPHTC.voided = 0   
                and htsObs.voided=0
                group by htsObs.person_id,date(obsPHTC.date_created),date(obsPHTC.obs_datetime),v.visit_id",
      "tableName": "hts_program_events_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    }
  ],
  "procedures":[
    {
      "name":"Discharge Date Procedure",
      "sourceFilePath":"classpath:procedureSql/dischargeDateProc.sql"
    },
    {
      "name":"Age Group Procedure",
      "sourceFilePath":"classpath:procedureSql/ageGroupProc.sql"
    }
  ],
  "views": [
    {
      "name": "patient_program_view",
      "sourceFilePath":"classpath:viewSql/patientProgramView.sql"
    },
    {
      "name": "patient_visits_encounters_view",
      "sourceFilePath": "classpath:viewSql/patientVisitsEncountersView.sql"
    },
    {
      "name": "appointment_admin_panel_view",
      "sql": "SELECT * FROM appointment_service_default LEFT OUTER JOIN service_availability_default USING (appointment_service_id, service_name)"
    },
    {
      "name": "patient_details_view",
      "sourceFilePath": "classpath:viewSql/patientDetailsView.sql"
    },
    {
      "name": "patient_information_view",
      "sourceFilePath": "classpath:viewSql/patientInformationView.sql"
    },
    {
      "name":"bed_management_view",
      "sourceFilePath":"classpath:viewSql/bedManagementView.sql"
    },
    {
      "name":"bed_management_locations_view",
      "sourceFilePath":"classpath:viewSql/locationWiseDischarge.sql"
    },
    {
      "name": "patient_bed_view",
      "sourceFilePath": "classpath:viewSql/patientBedView.sql"
    },
    {
      "name": "patient_operation_theater_view",
      "sourceFilePath": "classpath:viewSql/patientOperationTheaterView.sql"
    },
    {
      "name": "patient_appointment_view",
      "sourceFilePath": "classpath:viewSql/patientAppointmentView.sql"
    },
    {
      "name": "patient_program_medication_view",
      "sourceFilePath": "classpath:viewSql/patientProgramMedicationView.sql"
    },
    {
      "name": "patient_diagnosis_condition_view",
      "sourceFilePath": "classpath:viewSql/patientDiagnosisConditionView.sql"
    },
    {
      "name": "patient_bed_tags_history_view",
      "sourceFilePath": "classpath:viewSql/patientBedTagView.sql"
    }
  ]
}