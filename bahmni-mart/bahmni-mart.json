{
  "jobs": [
    {
      "name": "Programs",
      "type": "programs",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Patients",
      "type": "patients",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Appointments",
      "type": "appointments",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "appointment_service_default",
          "columnsToIgnore": [
          ]
        }
      ]
    },
    {
      "name": "Bed Management",
      "type": "bedManagement",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Location",
      "type": "location",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Operation Theater",
      "type": "operationTheater",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Person",
      "type": "person",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "person_attributes",
          "columnsToIgnore": [
            "primaryContact",
            "secondaryContact",
            "primaryRelative",
            "familyNameLocal",
            "givenNameLocal",
            "middleNameLocal"
          ]
        },
        {
          "tableName": "person_details_default",
          "columnsToIgnore": [
            "prefix",
            "given_name",
            "middle_name",
            "family_name_prefix",
            "family_name",
            "family_name2",
            "family_name_suffix"
          ]
        }
      ]
    },
    {
      "name": "Provider",
      "type": "provider",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Visits And Encounters",
      "type": "visitsAndEncounters",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Medication And Orders",
      "type": "medicationAndOrders",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "medication_data_default",
          "columnsToIgnore": [
            "instructions",
            "stop_notes"
          ]
        }
      ]
    },
    {
      "name": "Diagnoses And Conditions",
      "type": "diagnosesAndConditions",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Bacteriology Data",
      "conceptReferenceSource": "",
      "type": "bacteriology",
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "MetaData Dictionary",
      "type": "metadata",
      "conceptReferenceSource": ""
    },
    {
      "name": "Obs Data",
      "type": "obs",
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      },
      "separateTableConfig": {
        "enableForAddMoreAndMultiSelect": false,
        "separateTables": [
        ]
      },
      "conceptReferenceSource": "",
      "ignoreAllFreeTextConcepts": false,
      "columnsToIgnore": [
        "Image"
      ]
    },
    {
      "name": "Registration Second Page",
      "type": "reg",
      "columnsToIgnore": [],
      "separateTableConfig": {
        "enableForAddMoreAndMultiSelect": true,
        "separateTables": []
      },
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "Disposition Data",
      "type": "disposition",
      "columnsToIgnore": [],
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "patient_encounter_table_creation",
      "type": "customSql",
      "readerSql": "Select e.*,concat(pName.given_name,' ',pName.family_name) as 'counsellorCode'  from encounter e 
                    inner join encounter_provider eProvider
                    on e.encounter_id = eProvider.encounter_id
                    Inner Join provider p
                    on p.provider_id = eProvider.provider_id
                    Inner Join person_name pName
                    on pName.person_id = p.person_id",
      "tableName": "patient_encounter_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
      },
    {
      "name": "PSI Patient program data",
      "type": "customSql",
      "readerSql": "SELECT  pp.patient_id, pp.program_id, pp.patient_program_id, pp.date_enrolled,
                            FORMAT((DATEDIFF(pp.date_enrolled, p.birthdate) / 365), 0) AS \"age_during_enrollment\", 
                            pp.date_completed, FORMAT((DATEDIFF(pp.date_completed, p.birthdate) / 365), 0) 
                            AS \"age_during_completion\", pp.location_id, l.name AS \"location_name\", 
                            cn_outcome.concept_full_name AS \"program_outcome\", pp.creator AS \"creator_id\", 
                            creator_details.name AS \"creator_name\", pp.date_created, pp.date_changed, 
                            pp.changed_by AS \"changed_by_id\", changer_details.name AS \"changed_by_name\" 
                            FROM patient_program pp INNER JOIN person p ON p.person_id = pp.patient_id 
                            INNER JOIN (SELECT users.user_id, concat_ws(' ', ifnull(pn.given_name, ''), ifnull(pn.family_name, '')) 
                            AS name FROM users INNER JOIN person_name pn ON users.person_id = pn.person_id) creator_details ON creator_details.user_id = pp.creator 
                            LEFT OUTER JOIN (SELECT users.user_id, concat_ws(' ', ifnull(pn.given_name, ''), ifnull(pn.family_name, '')) AS name FROM users INNER JOIN person_name pn ON users.person_id = pn.person_id) 
                            changer_details ON changer_details.user_id = pp.changed_by 
                            LEFT OUTER JOIN concept_view cn_outcome ON cn_outcome.concept_id = pp.outcome_concept_id AND cn_outcome.retired = FALSE 
                            LEFT OUTER JOIN location l ON l.location_id = pp.location_id AND l.retired = FALSE where pp.voided = 0",
      "tableName": "psi_patient_program_data",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "patient_registration_second_page_creation",
      "type": "customSql",
      "readerSql": "select obsRegSecondPage.obs_id, 
                           obsRegSecondPage.encounter_id,
                           obsRegSecondPage.obs_datetime,
                           obsRegSecondPage.person_id as 'patient_id',
                           cv1.concept_full_name as 'reason_for_visit',
                           obsRegSecondPage.date_created
                            from obs obsRegSecondPage
                    join concept_view cv on obsRegSecondPage.concept_id = cv.concept_id
                    join concept_view cv1 on obsRegSecondPage.value_coded = cv1.concept_id
                    where cv.concept_full_name IN (\"Reason for visit\")
      and cv.retired = 0
      and obsRegSecondPage.voided = 0",
      "tableName": "patient_registration_second_page",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
      },
    {
      "name": "FPS_instance_table_creation",
      "type": "customSql",
      "readerSql": "select              
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select 
                                        pid as person_id,
                                        max(DateChanged) as dateChanged 
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt 
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form,Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the FPS Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from 
                                                    program 
                                                    where name ='FPS Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "fps_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "FPS_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select 
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\", 
                    'ACTIVE' as status
                        from patient_program pp /*patient_program for the patients enrolled in FPS Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id 
                                        from patient_identifier_type 
                                        where name = 'Patient Identifier' 
                                        and retired=0
                                              )
                  inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form,Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from 
                        program 
                        where name ='FPS Program'
                        and retired=0
                                             )    
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "fps_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
  {
    "name": "HTS_instance_table_creation",
      "type": "customSql",
      "readerSql": "select              
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select 
                                        pid as person_id,
                                        max(DateChanged) as dateChanged 
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt 
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the HTS Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from 
                                                    program 
                                                    where name ='HTS Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "hts_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "HTS_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select 
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\", 
                    'ACTIVE' as status
                        from patient_program pp /*patient_program for the patients enrolled in HTS Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id 
                                        from patient_identifier_type 
                                        where name = 'Patient Identifier' 
                                        and retired=0
                                              )
                  inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from 
                        program 
                        where name ='HTS Program'
                        and retired=0
                                             )    
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "hts_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "VIAC_instance_table_creation",
      "type": "customSql",
      "readerSql": "select              
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select 
                                        pid as person_id,
                                        max(DateChanged) as dateChanged 
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt 
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the VIAC Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from 
                                                    program 
                                                    where name ='VIAC Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "viac_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "VIAC_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select 
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\", 
                    'ACTIVE' as status
                        from patient_program pp /*patient_program for the patients enrolled in VIAC Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id 
                                        from patient_identifier_type 
                                        where name = 'Patient Identifier' 
                                        and retired=0
                                              )
                  inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from 
                        program 
                        where name ='VIAC Program'
                        and retired=0
                                             )    
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "viac_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
        {
    "name": "ART_instance_table_creation",
      "type": "customSql",
      "readerSql": "select              
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select 
                                        pid as person_id,
                                        max(DateChanged) as dateChanged 
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt 
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the FPS Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from 
                                                    program 
                                                    where name ='ART Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "art_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
  {
    "name": "ART_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select 
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\", 
                    'ACTIVE' as status
                        from patient_program pp /*patient_program for the patients enrolled in ART Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id 
                                        from patient_identifier_type 
                                        where name = 'Patient Identifier' 
                                        and retired=0
                                              )
                  inner join  
                    (Select 
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs 
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from 
                        program 
                        where name ='ART Program'
                        and retired=0
                                             )    
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "art_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    }
  ],
  "procedures":[
    {
      "name":"Discharge Date Procedure",
      "sourceFilePath":"classpath:procedureSql/dischargeDateProc.sql"
    },
    {
      "name":"Age Group Procedure",
      "sourceFilePath":"classpath:procedureSql/ageGroupProc.sql"
    }
  ],
  "views": [

    {
      "name": "patient_program_view",
      "sourceFilePath":"classpath:viewSql/patientProgramView.sql"
    },
    {
      "name": "patient_visits_encounters_view",
      "sourceFilePath": "classpath:viewSql/patientVisitsEncountersView.sql"
    },
    {
      "name": "appointment_admin_panel_view",
      "sql": "SELECT * FROM appointment_service_default LEFT OUTER JOIN service_availability_default USING (appointment_service_id, service_name)"
    },

    {
      "name": "patient_details_view",
      "sourceFilePath": "classpath:viewSql/patientDetailsView.sql"
    },
    {
      "name": "patient_information_view",
      "sourceFilePath": "classpath:viewSql/patientInformationView.sql"
    },
    {
      "name":"bed_management_view",
      "sourceFilePath":"classpath:viewSql/bedManagementView.sql"
    },
    {
      "name":"bed_management_locations_view",
      "sourceFilePath":"classpath:viewSql/locationWiseDischarge.sql"
    },
    {
      "name": "patient_bed_view",
      "sourceFilePath": "classpath:viewSql/patientBedView.sql"
    },
    {
      "name": "patient_operation_theater_view",
      "sourceFilePath": "classpath:viewSql/patientOperationTheaterView.sql"
    },
    {
      "name": "patient_appointment_view",
      "sourceFilePath": "classpath:viewSql/patientAppointmentView.sql"
    },
    {
      "name": "patient_program_medication_view",
      "sourceFilePath": "classpath:viewSql/patientProgramMedicationView.sql"
    },
    {
      "name": "patient_diagnosis_condition_view",
      "sourceFilePath": "classpath:viewSql/patientDiagnosisConditionView.sql"
    },
    {
      "name": "patient_bed_tags_history_view",
      "sourceFilePath": "classpath:viewSql/patientBedTagView.sql"
    },

        {
 "name": "hts_program_events_table",
 "sql": "SELECT 'vatFxlZR2lj':: TEXT AS program,
        'bY9Dg3Je4CN':: TEXT AS program_stage,
         
        max(CASE WHEN phtc.\"phtc_site_type\" = 'Outreach'
              THEN concat('ZWNSC-OU-',upper(COALESCE(phtc.\"phtc_facility\", (SELECT phtc_facility FROM provider_hiv_test_counselling phtc_temp WHERE phtc_facility IS NOT NULL AND  phtc_temp.patient_id = pedd.patient_id AND pedd.encounter_id > phtc_temp.encounter_id  ORDER BY phtc_temp.encounter_id DESC LIMIT 1))),'-',upper(phtc.\"phtc_district\"))   
         ELSE concat('ZWNSC-',upper(COALESCE(phtc.\"phtc_facility\",  (SELECT phtc_facility FROM provider_hiv_test_counselling phtc_temp WHERE phtc_facility IS NOT NULL AND phtc_temp.patient_id  = pedd.patient_id AND pedd.encounter_id > phtc_temp.encounter_id  ORDER BY phtc_temp.encounter_id DESC LIMIT 1))))
         END) AS \"OrgUnit\",
         
        max(CASE WHEN   COALESCE(phtc.obs_datetime, '01-01-0001' ) >= COALESCE(pht.obs_datetime, '01-01-0001' )
                AND  COALESCE(phtc.obs_datetime, '01-01-0001' ) >=  COALESCE(hst.obs_datetime, '01-01-0001' )
            THEN date(phtc.obs_datetime)
          
            WHEN ( COALESCE(hst.obs_datetime, '01-01-0001' ) >= COALESCE(phtc.obs_datetime, '01-01-0001' ) ) 
                 AND ( COALESCE(hst.obs_datetime, '01-01-0001' ) >= COALESCE(pht.obs_datetime, '01-01-0001' ) ) 
            THEN date(hst.obs_datetime) 
         ELSE
            date(pht.obs_datetime) 
         END) AS \"event_date\",
         
         'COMPLETED' :: TEXT AS status,

        max(pedd.\"visit_id\") AS \"event_unique_id\",
        max(DATE(ppv.\"date_enrolled\"))  AS \"enrollment_date\",
        
        max(CASE WHEN COALESCE(phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_created, '01-01-0001 00:00:00' )
                AND COALESCE(phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_created, '01-01-0001 00:00:00' )
             THEN phtc.date_created
          
            WHEN COALESCE(hst.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(hst.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_created, '01-01-0001 00:00:00' )
            THEN hst.date_created
        ELSE
            pht.date_created
        END) AS \"date_created\",
        
        max(pi.\"Patient_Identifier\") AS \"Patient_Identifier\", 
        max( CASE WHEN hst.hst_assisted_st = 'Yes' THEN 1
                  WHEN hst.hst_assisted_st =  'No' THEN 0
              ELSE NULL END ) :: BOOLEAN AS \"Assisted ST\",
              
        max( CASE WHEN phtc.you_partner_currently_pregnant = 'Yes' THEN 1 
                  WHEN phtc.you_partner_currently_pregnant = 'No' THEN 0
             ELSE NULL END ):: BOOLEAN  AS \"You/partner currently pregnant?\",
             
        max(CASE WHEN phtc_client_received_post_test_counseling = 'Yes' THEN 1 
                  WHEN phtc_client_received_post_test_counseling = 'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Client received post test counseling?\",
        
         max(CASE WHEN  phtc_family_planning_counselling IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN 
                 CASE WHEN phtc_family_planning_counselling = 'Yes' THEN 1 
                      WHEN phtc_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END
             WHEN  phtc_family_planning_counselling IS NULL 
             THEN 
                 CASE WHEN pht_family_planning_counselling = 'Yes' THEN 1 
                      WHEN pht_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END 
             WHEN pht_family_planning_counselling IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN 
                 CASE WHEN pht_family_planning_counselling = 'Yes' THEN 1 
                      WHEN pht_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END 
             WHEN  pht_family_planning_counselling IS NULL 
             THEN 
                 CASE WHEN phtc_family_planning_counselling = 'Yes' THEN 1 
                      WHEN phtc_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END
             ELSE NULL
         END):: BOOLEAN  AS \"Family Planning Counselling\",
         
        max(CASE WHEN ever_been_tested = 'Yes' THEN 1 
                 WHEN ever_been_tested = 'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Ever been tested\",
        
         max(CASE WHEN  phtc_history_of_sexual_abuse IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' ) 
             THEN 
                 CASE WHEN phtc_history_of_sexual_abuse = 'Yes' THEN 1 
                      WHEN phtc_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             WHEN  phtc_history_of_sexual_abuse IS NULL 
             THEN  
                 CASE WHEN pht_history_of_sexual_abuse = 'Yes' THEN 1 
                      WHEN pht_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             WHEN pht_history_of_sexual_abuse IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' ) 
             THEN  
                 CASE WHEN pht_history_of_sexual_abuse = 'Yes' THEN 1 
                      WHEN pht_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             WHEN   pht_history_of_sexual_abuse IS NULL 
             THEN 
                 CASE WHEN phtc_history_of_sexual_abuse = 'Yes' THEN 1 
                      WHEN phtc_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             ELSE NULL
         END) :: BOOLEAN   AS \"History of sexual abuse\",
         
        CASE WHEN max(has_your_most_recent_sex_partner_been_tested_in_the_last_3_) IN ('Yes - negative', 'Yes - positive', 'Yes - dont know results') THEN 1 
                  WHEN max(has_your_most_recent_sex_partner_been_tested_in_the_last_3_) = 'No' THEN 0
             ELSE NULL END :: BOOLEAN AS \"Has your most recent sex partner been tested in the last 3months?\",
        
         max(CASE WHEN COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) THEN
              CASE WHEN phtc_was_referred_to_multiple_responses_possible  IS NOT NULL THEN 
              (SELECT string_agg (
                           CASE WHEN phtc_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Private Doctor' THEN 'Private doctor'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other' THEN 'Other'
                                END ,',') FROM provider_hiv_test_counselling phtctemp WHERE phtctemp.encounter_id = pedd.encounter_id AND 
                                phtctemp.patient_id = pedd.patient_id GROUP BY phtctemp.encounter_id)
              WHEN  COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' )  THEN
                         CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN 
                              (SELECT string_agg (
                                CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                    END ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                          ELSE
                               CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN  
                                 (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                               
                               ELSE 
                               NULL  END
                         END
              ELSE 
                  CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN  
                    (SELECT string_agg (
                                    CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE  hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                  
                  ELSE NULL END       
               END 
               
         WHEN COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' )
                  AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' ) THEN 
                  
                  CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN 
                     (SELECT string_agg (
                     CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                    END  ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                  WHEN COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' )
                  THEN
                  CASE WHEN phtc_was_referred_to_multiple_responses_possible  IS NOT NULL THEN  
                  (SELECT string_agg (
                           CASE WHEN phtc_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Private Doctor' THEN 'Private doctor'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other' THEN 'Other'
                                END ,',') FROM provider_hiv_test_counselling phtctemp WHERE phtctemp.encounter_id = pedd.encounter_id AND phtctemp.patient_id = pedd.patient_id GROUP BY phtctemp.encounter_id)
                  ELSE 
                               CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN  
                               (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                               ELSE 
                               NULL  END
                  END 
                  ELSE 
                  CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN 
                  (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                  ELSE NULL END 
                  END 
         ELSE 
             CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN 
             (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                                          
             WHEN COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' )THEN
                 CASE WHEN phtc_was_referred_to_multiple_responses_possible  IS NOT NULL THEN  
                  (SELECT string_agg (
                           CASE WHEN phtc_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Private Doctor' THEN 'Private doctor'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other' THEN 'Other'
                                END ,',') FROM provider_hiv_test_counselling phtctemp WHERE phtctemp.encounter_id = pedd.encounter_id AND phtctemp.patient_id = pedd.patient_id GROUP BY phtctemp.encounter_id)
                ELSE 
                        CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN  
                         (SELECT string_agg (
                             CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                  END ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                             ELSE NULL  END
                  END 
                  ELSE 
                  CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN  
                   (SELECT string_agg (
                                CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                    END ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                  ELSE NULL END 
                  END 
             
END)  AS \"referred by\",

max(CASE WHEN phtc.hiv_test_results IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN phtc.hiv_test_results
             WHEN  phtc.hiv_test_results IS NULL 
             THEN  pht_hiv_test_result
             WHEN   pht_hiv_test_result IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN  pht_hiv_test_result
             WHEN   pht_hiv_test_result IS NULL 
             THEN phtc.hiv_test_results
             ELSE NULL
         END)  AS \"HIV test results\",
         
         max(CASE WHEN phtc_have_you_ever_talked_about_t_c_with_your_partner_spous IS NOT NULL AND  COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' ) 
             THEN phtc_have_you_ever_talked_about_t_c_with_your_partner_spous 
             WHEN  phtc_have_you_ever_talked_about_t_c_with_your_partner_spous IS NULL 
             THEN  pht_have_you_ever_talked_about_t_c_with_your_partner_spouse
             WHEN pht_have_you_ever_talked_about_t_c_with_your_partner_spouse IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN  pht_have_you_ever_talked_about_t_c_with_your_partner_spouse
             WHEN   pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s IS NULL
             THEN phtc_have_you_ever_talked_about_t_c_with_your_partner_spous 
             ELSE NULL
         END)  AS \"Have you ever talked about T&C with your partner/spouse?\",
         
        max(if_yes_where_were_you_last_tested) AS \"If yes, where were you last tested?\",
        
        max(CASE WHEN phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_ IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_
             WHEN  phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_ IS NULL 
             THEN  pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s
             WHEN  pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN  pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s
             WHEN   pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s IS NULL AND (pht.date_created >= phtc.date_created)
             THEN phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_
             ELSE NULL
         END)  AS \"In the last twelve month exchanged money or goods for sex\",
         
        
        max(CASE WHEN hst_consent_to_follow_up = 'Yes' THEN 1
                 WHEN hst_consent_to_follow_up =  'No' THEN 0
            ELSE NULL END) :: BOOLEAN AS \"Consent to follow-up\",
            
        max(phtc_late_read_result) AS \"Late read result?\",
        
          max(CASE WHEN phtc_mc_counselling_provided IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN 
                 CASE WHEN phtc_mc_counselling_provided = 'Yes' THEN 1
                      WHEN phtc_mc_counselling_provided =  'No' THEN 0
                 ELSE NULL END
             WHEN  phtc_mc_counselling_provided IS NULL 
             THEN 
                 CASE WHEN pht_mc_counselling_provided = 'Yes' THEN 1
                      WHEN pht_mc_counselling_provided =  'No' THEN 0
                 ELSE NULL END
             WHEN  pht_mc_counselling_provided IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN 
                  CASE WHEN pht_mc_counselling_provided = 'Yes' THEN 1
                       WHEN pht_mc_counselling_provided =  'No' THEN 0
                 ELSE NULL END
             WHEN  pht_mc_counselling_provided IS NULL 
             THEN 
                 CASE WHEN phtc_mc_counselling_provided = 'Yes' THEN 1
                      WHEN phtc_mc_counselling_provided =  'No' THEN 0
                  ELSE NULL END
             ELSE NULL END) :: BOOLEAN  AS \"MC counselling provided\",
         
        max(phtc_site_type) AS \"Site type\",
        max(how_long_ago_were_you_last_tested_months) :: TEXT AS \"How long ago were you last tested (months)?\",
       
        
        max(CASE WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti IS NOT NULL AND (COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' ))
             THEN 
                 CASE WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti IN ('2 weeks','4 weeks','3 months', '6 months','1 year') THEN 1
                      WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti = 'N/A' THEN 0
                 END
             WHEN  phtc_if_client_advised_to_return_for_re_testing_indicate_ti IS NULL 
             THEN 
                 CASE WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim IN ('2 weeks','4 weeks','3 months', '6 months','1 year') THEN 1
                       WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim  = 'Other(specify)' then 0
                     END 
             WHEN  pht_if_client_advised_to_return_for_re_testing_indicate_tim IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN 
                 CASE WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim IN ('2 weeks','4 weeks','3 months', '6 months','1 year')  THEN 1
                       WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim  = 'Other(specify)' then 0
                      END 
             WHEN  pht_if_client_advised_to_return_for_re_testing_indicate_tim IS NULL 
             THEN 
                  CASE WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti IN ('2 weeks','4 weeks','3 months', '6 months','1 year')  THEN 1
                       WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti = 'N/A' THEN 0
                      END 
             ELSE NULL END) :: BOOLEAN  AS \"If client advised to return for re-testing indicate timeline (2 weeks, 4 weeks, 3 months, 6 months, other)\",

       
         max(CASE WHEN phtc_tb_screening_have_you_had_a_cough = 'Yes' THEN 1
                  WHEN phtc_tb_screening_have_you_had_a_cough =  'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Have you had a cough?\"

FROM
patient_encounter_table pedd 
    
    JOIN psi_patient_program_data ppv ON pedd.patient_id = ppv.patient_id
    JOIN patient_identifier pi ON ppv.patient_id = pi.patient_id 
    LEFT OUTER JOIN provider_hiv_test_counselling phtc ON phtc.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN post_hiv_test_counselling pht ON pht.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN hiv_self_testing hst ON hst.encounter_id = pedd.encounter_id
    
    where ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'HTS Program')
    AND (pedd.encounter_id in (select encounter_id from provider_hiv_test_counselling 
                                UNION select encounter_id from post_hiv_test_counselling
                                UNION select encounter_id from hiv_self_testing))
         
    GROUP BY hst.id_hiv_self_testing,phtc.id_provider_hiv_test_counselling
    ORDER BY date_created DESC;"
 },
 {
 "name": "viac_program_events_table",
 "sql": "select 
        'vatFxlZR2lj':: TEXT as program,
        'YoxZS1bsBaW':: TEXT as program_stage,
        max(case when viac.\"viac_form_site_type\" = 'Outreach'
                    then concat('ZWNSC-OU-',upper(viac.\"viac_form_facility\"),'-',upper(viac.\"viac_form_district\"))
                    ELSE concat('ZWNSC-',upper(viac.\"viac_form_facility\"))
                    end) as \"OrgUnit\",
        max(date(viac.\"obs_datetime\")) as \"event_date\",
        'COMPLETED' :: TEXT as status,
        max(pedd.\"visit_id\") as \"event_unique_id\",
        max(DATE(ppv.\"date_enrolled\"))  as \"enrollment_date\",
        max(viac.\"date_created\") as \"date_created\",       
        max(pi.\"Patient_Identifier\") as \"Patient_Identifier\",
        max(viac.\"viac_form_site_type\") as \"Site Type\",
        max(viac.\"viac_form_setting\") as \"Setting\",
        max(viac.\"viac_form_gravida\") as \"Gravida\",
        max(viac.\"viac_form_parity\") as \"Parity\",
        string_agg(
        case
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Initial (never been screened before for CaCx)' then 'Initial (never been screened before for CaCx)' 
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Repeat' then 'Repeat'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Treatment' then 'Treatment'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Review after' then 'Review after'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, VIAC after Positive HPV DNA Test' then 'VIAC after Positive HPV DNA Test'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Counseling Only' then 'Counseling Only'
        end ,', ') as \"Type of visit\",
        string_agg(
        case
        when viac.\"viac_form_repeat_specify_period\" = '1 year' then '1 year' 
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 2 Years' then '2 years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 4 Years' then '4 Years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"Specify period\",
        string_agg(
        case
        when viac.\"viac_form_treatment_specify_treatment\" = 'Viac Form, Cryotherapy' then 'Cryotherapy' 
        when viac.\"viac_form_treatment_specify_treatment\" = 'Viac Form, Thermocoagulation' then 'Thermocoagulation'
        when viac.\"viac_form_treatment_specify_treatment\" = 'Viac Form, Treatment LEEP' then 'LEEP'
        end ,', ') as \"Specify treatment\",
        string_agg(
        case
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Cryotherapy' then 'Cryotherapy' 
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Thermocoagulation' then 'Thermocoagulation'
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Review after LEEP' then 'LEEP'
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Antibiotics' then 'Antibiotics'
        when viac.\"viac_form_review_after_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for review after\",
        max(viac.\"viac_form_hiv_status\") as \"HIV Status\",
        max(viac.\"viac_form_age_at_sexual_debut\") as \"Age at sexual debut\",
        max(viac.\"viac_form_no_of_lifetime_partners\") as \"No. of lifetime partners\",
        max(viac.\"viac_form_presenting_complaints\") as \"Presenting complaints\",
        string_agg(
        case
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, Lower Abdominal Pain' then 'Lower Abdominal Pain' 
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, Lower Back Pain' then 'Lower Back Pain'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, Pelvic Inflamatory Disease' then 'Pelvic Inflamatory Disease'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, PV Discharge' then 'PV Discharge'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, PV Bleeding' then 'PV Bleeding'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for presenting complaints\",
        max(viac.\"viac_form_ever_treated_for_stis\") as \"Ever treated for STIs\",
        string_agg(
        case
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Genital Ulcer Disease' then 'Genital Ulcer Disease' 
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Vaginal Discharge Syndrome' then 'Vaginal Discharge Syndrome'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Pelvic Inflamatory Disease' then 'Pelvic Inflamatory Disease'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Genital Herpes' then 'Genital Herpes'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Genital warts' then 'Genital warts'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for ever treated for STIs\",
        string_agg(
        case
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Always' then 'Always' 
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Sometimes' then 'Sometimes'
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Never' then 'Never'
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Viac Form, Abstinent' then 'Abstinent'
        end ,', ') as \"Condom use with regular/non regular partner\",
        string_agg(
        case
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Emergency contraception' then 'Emergency contraception' 
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Projesterone only pill (POP)' then 'Projesterone only pill (POP)'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Combined oral contaceptive (COC)' then 'Combined oral contaceptive (COC)'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Injectable (Petogen)' then 'Injectable (Petogen)'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Implanon Implants' then 'Implanon Implants' 
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Jadelle Implants' then 'Jadelle Implants'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Copper T IUCD' then 'Copper T IUCD'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, LNG-IUS IUCD' then 'LNG-IUS IUCD'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Vasectomy' then 'Vasectomy' 
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Tuberligation' then 'Tuberligation'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Condoms' then 'Condoms'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'None' then 'None'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Other' then 'Other'
        end ,', ') as \"Prior family planning predominantly used\",
        max(viac.\"viac_form_have_you_ever_used_coc\") as \"Have you ever used COC\",
        string_agg(
        case
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, less than 1' then '<1' 
        when viac.\"viac_form_coc_for_how_many_years\" = '1 year' then '1 year'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 2 Years' then '2 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 4 Years' then '4 Years' 
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"For how many years on COC?\",
        max(case when viac.\"viac_form_history_of_smoking\" = 'Yes' then 1
                 when viac.\"viac_form_history_of_smoking\" = 'No' THEN 0
                    else null end) :: BOOLEAN as \"History of smoking\",
        string_agg(
        case
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, less than 1' then '<1' 
        when viac.\"viac_form_smoking_for_how_many_years\" = '1 year' then '1 year'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 2 Years' then '2 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 4 Years' then '4 Years' 
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"For how many years on Smoking\",
        max(viac.\"viac_form_current_medication_for_chronic_conditions\") as \"Current Medication for Chronic condition\",
        string_agg(
        case
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-retrovirals' then 'Anti-retrovirals' 
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-hypertensives' then 'Anti-hypertensives'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Diabetics' then 'Diabetics'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-Epleptics' then 'Anti-Epleptics'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Chemotherapy' then 'Chemotherapy' 
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-Asthmatics' then 'Anti-Asthmatics'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for chronic conditions\",
        max(case when viac.\"viac_form_prior_ca_cervix_screening_in_lifetime\" = 'Yes' then 1
                 when viac.\"viac_form_prior_ca_cervix_screening_in_lifetime\" = 'No' THEN 0
                    else null end) :: BOOLEAN as \"Prior CA CERVIX screening in lifetime\",

        string_agg(
        case
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, less than 1' then '<1' 
        when viac.\"viac_form_when_were_you_last_screened\" = '1 year' then '1 year'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 2 Years' then '2 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 4 Years' then '4 Years' 
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"When were you last screened?\",
        string_agg(
        case
        when viac.\"viac_form_method_used_in_your_last_screen\" = 'Viac Form, PAP SMEAR' then 'PAP SMEAR' 
        when viac.\"viac_form_method_used_in_your_last_screen\" = 'Viac Form, VIAC' then 'VIAC'
        when viac.\"viac_form_method_used_in_your_last_screen\" = 'Viac Form, HPV DNA Testing' then 'HPV DNA Testing'
        end ,', ') as \"Method used in your last screen\",
        string_agg(
        case
        when viac.\"viac_form_screening_method_used_on_this_visit\" = 'Viac Form, VIAC/ VIA' then 'VIAC/ VIA' 
        when viac.\"viac_form_screening_method_used_on_this_visit\" = 'Viac Form, HPV DNA' then 'HPV DNA'
        when viac.\"viac_form_screening_method_used_on_this_visit\" = 'Viac Form, PAP SMEAR' then 'PAP SMEAR'
        end ,', ') as \"Screening method used on this visit\",
        string_agg(
        case
        when viac.\"viac_form_specimen_collected_by\" = 'Viac Form, Self-collected specimen' then 'Self-collected specimen' 
        when viac.\"viac_form_specimen_collected_by\" = 'Viac Form, Provider-collected specimen' then 'Provider-collected specimen'
        end ,', ') as \"Specimen collected by\",
        string_agg(
        case
        when viac.\"viac_form_result\" = 'Negative' then 'Negative' 
        when viac.\"viac_form_result\" = 'Positive' then 'Positive'
        when viac.\"viac_form_result\" = 'Viac Form, Suspicious of Cancer' then 'Suspicious of Cancer'
        end ,', ') as \"Result\",
        string_agg(
        case
        when viac.\"viac_form_intervention\" = 'Viac Form, Eligible for Cryotherapy/thermocoagulation' then 'Eligible for Cryotherapy/thermocoagulation' 
        when viac.\"viac_form_intervention\" = 'Viac Form, Eligible for LEEP' then 'Eligible for LEEP'
        when viac.\"viac_form_intervention\" = 'Viac Form, Extensive Lesion' then 'Extensive Lesion'
        end ,', ') as \"Intervention\",
        string_agg(
        case
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Polyps' then 'Polyps' 
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Uterine Prolapse' then 'Uterine Prolapse'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Nabothian Cysts' then 'Nabothian Cysts'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Strawberry Lesions' then 'Strawberry Lesions'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Other' then 'Other '
        end ,', ') as \"Other pathological lesions seen\"
        from psi_patient_program_data ppv
                join viac_form_template viac on ppv.patient_id = viac.patient_id
                join patient_identifier pi on ppv.patient_id = pi.patient_id
                join person_attributes pa on ppv.patient_id = pa.person_id
                join person_address_default pad on pa.person_id = pad.person_id
                join patient_encounter_table pedd on viac.encounter_id = pedd.encounter_id
                where ppv.program_id = (select program_id from programs_default where program_name = 'VIAC Program')
                group by viac.id_viac_form_template,viac.patient_id
                order by viac.id_viac_form_template desc;"
},
{
 "name": "fps_program_events_table",
 "sql": "SELECT 
        'vatFxlZR2lj':: TEXT AS program,
        'KeomfqRdu8Q':: TEXT AS program_stage,
        'COMPLETED' :: TEXT AS status,
     
        max(CASE WHEN fps.\"fps_form_site_type\" = 'Outreach'
              THEN concat('ZWNSC-OU-',upper(
                   COALESCE(fps.\"fps_form_facility\", (SELECT \"fps_form_facility\" FROM fps_family_planning_service fps_temp WHERE fps_form_facility IS NOT NULL AND                      fps_temp.patient_id = pedd.patient_id AND pedd.encounter_id > fps_temp.encounter_id 
                      ORDER BY fps_temp.encounter_id DESC LIMIT 1))),'-',upper( fps.\"fps_district\"))   
         ELSE concat('ZWNSC-',upper(
              COALESCE(fps.\"fps_form_facility\",  (SELECT \"fps_form_facility\" FROM fps_family_planning_service fps_temp WHERE fps_form_facility IS NOT NULL AND                fps_temp.patient_id = pedd.patient_id AND pedd.encounter_id >= fps_temp.encounter_id 
              ORDER BY fps_temp.encounter_id DESC LIMIT 1))))
         END) AS \"OrgUnit\",
        
         max(pedd.\"visit_id\") AS \"event_unique_id\",
         max(DATE(ppv.\"date_enrolled\"))  AS \"enrollment_date\",
         
         max(CASE WHEN COALESCE(fps.obs_datetime, '01-01-0001' ) >= COALESCE(fpc.obs_datetime, '01-01-0001' )
                AND  COALESCE(fps.obs_datetime, '01-01-0001' ) >=  COALESCE(fpcounselling.obs_datetime, '01-01-0001' )
            THEN date(fps.obs_datetime)
          
            WHEN ( COALESCE(fpc.obs_datetime, '01-01-0001' ) >= COALESCE(fps.obs_datetime, '01-01-0001' ) ) 
                 AND ( COALESCE(fpc.obs_datetime, '01-01-0001' ) >= COALESCE(fpcounselling.obs_datetime, '01-01-0001' ) ) 
            THEN date(fpc.obs_datetime) 
         ELSE
            date(fpcounselling.obs_datetime) 
         END) AS \"event_date\",
         
         max(CASE WHEN COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' )
                AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_created, '01-01-0001 00:00:00' )
             THEN fps.date_created
          
            WHEN COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_created, '01-01-0001 00:00:00' )
            THEN fpc.date_created
        ELSE
            fpcounselling.date_created
        END) AS \"date_created\",
        
         max(pi.\"Patient_Identifier\") AS \"Patient_Identifier\",
         max(pdd.age) AS \"Age\",

         max(CASE WHEN fps.\"fps_reg_is_client_accompanied_by_her_partner\" = 'Yes' THEN 1
                  WHEN fps.\"fps_reg_is_client_accompanied_by_her_partner\" = 'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Is client accompanied by her Partner\",
          
         max(fps.\"fps_reg_reason_for_the_visit\") AS \"Reason for the visit\",
         max(fps.\"fps_reg_reason_for_family_planning\") AS \"Reason for family planning\",
         
         max(CASE WHEN fps.\"fps_reg_occasion\" = 'FPS REG,Post Partum' THEN 'Post Partum' 
                         WHEN fps.\"fps_reg_occasion\" = 'FPS REG,Post abortion' THEN 'Post abortion'
                         WHEN fps.\"fps_reg_occasion\" = 'FPS REG,Interval' THEN 'Interval' 
                     END) AS \"Occasion\",
         
       max(CASE WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Friend/Relative' THEN 'Friend/Relative' 
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Other FP client' THEN 'Other FP client'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Partner/Spouse' THEN 'Partner/Spouse'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Health worker' THEN 'Health worker'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Poster/Leaflet/Brochure' THEN 'Poster/Leaflet/Brochure'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Community Mobilizer' THEN 'Community Mobilizer'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,TV' THEN 'TV'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Radio' THEN 'Radio'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,New Start T&C/New Life' THEN 'New Start T&C/New Life'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Other T&C service provider' THEN 'Other T&C service provider'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Other site' THEN 'Other site'
                        END) AS \"How did you hear about the FP services at sites?\",
          
           max(fps.\"fps_form_other_for_how_did_you_hear_about_the_fp_services_a\") AS \"If other, specify details\",
           max(fps.\"fps_form_referred_in_for\") AS \"Referred in for\",
           max(fps.\"fps_form_menarche\") AS \"Menarche\",
           max(fps.\"fps_form_lnmp\") AS \"LNMP\",
           max(fps.fps_form_menstrual_cycle_no_of_bleeding_days_length_of_cycl) AS \"Menstrual Cycle\",
           max(fps.\"fps_form_no_of_bleeding_days_length_of_cycle\") AS \"Number of bleeding days\",
           max(fps.\"fps_form_number_of_living_children_indicate_number_and_ages\") AS \"Number of Children and ages\",
           max(fps.\"fps_form_date_of_last_delivery\") AS \"Date of last delivery\", 
           
           max(CASE WHEN fps.\"fps_form_used_checklist_to_exclude_pregnancy\" = 'Yes' THEN 1
                    WHEN fps.\"fps_form_used_checklist_to_exclude_pregnancy\" = 'No' THEN 0
               ELSE NULL END) :: BOOLEAN AS \"Used checklist to exclude pregnancy\",
                  
       max(CASE WHEN  fps.\"fps_form_have_you_ever_used_any_contraception_before_tick_a\" IS NOT NULL THEN 
                (SELECT string_agg (
                                CASE WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Vasectomy' THEN 'Vasecotomy' 
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a  = 'FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Injectable (Petogen)' THEN 'Injectable'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a  = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a  = 'FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'Condoms' THEN 'Condoms'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'None' THEN 'None'
                                    END ,', ') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE NULL
                END ) AS \"Ever used contraception before\",
                
           max(fps.\"fps_form_p_v_loss\") AS \"P.V. Loss\",
           max(CASE WHEN fps.\"fps_form_post_coital_bleeding\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_post_coital_bleeding\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Post coital bleeding\",
           
            CASE WHEN max(fps.\"fps_form_pain_during_intercourse_dyspareunia\") ='Yes' THEN 1 
                     WHEN max(fps.\"fps_form_pain_during_intercourse_dyspareunia\") ='No' THEN 0
                ELSE NULL END :: BOOLEAN AS \"Pain during intercourse\",
                
             max(CASE WHEN fps.\"fps_form_any_discharge\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_any_discharge\" = 'No' THEN 0
                   ELSE NULL END) :: BOOLEAN AS \"Any Discharge\",
                    
             max(CASE WHEN fps.\"fps_form_pain_during_micturation\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_pain_during_micturation\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Pain during micturation\",
                    
             max(CASE WHEN fps.\"fps_form_allergies_state_below_if_any\" = 'Yes' THEN 1
                        WHEN fps.\"fps_form_allergies_state_below_if_any\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Allergies (state below if any)\",
              
             CASE WHEN string_agg( 
                                  CASE 
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Varicose Veins' THEN 'Varicose Veins' 
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Anemia' THEN 'Anemia'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'Diabetes Mellitus' THEN 'Diabetes Mellitus'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Thromboplebitis' THEN 'Thromboplebitis'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Heart condition' THEN 'Heart condition'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Liver problems' THEN 'Liver problems'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Epilepsy' THEN 'Epilepsy'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Cancer of the breast' THEN 'Cancer of the breast'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'N/A' THEN 'N/A'
                                END ,', ') != 'N/A' AND
            string_agg(
                                  CASE WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Varicose Veins' THEN 'Varicose Veins' 
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Anemia' THEN 'Anemia'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'Diabetes Mellitus' THEN 'Diabetes Mellitus'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Thromboplebitis' THEN 'Thromboplebitis'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Heart condition' THEN 'Heart condition'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Liver problems' THEN 'Liver problems'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Epilepsy' THEN 'Epilepsy'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Cancer of the breast' THEN 'Cancer of the breast'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'N/A' THEN 'N/A'
                                END ,', ') IS NOT NULL THEN  1
                ELSE NULL END :: BOOLEAN AS \"Does the client have a History\",
            
            max(CASE WHEN fps.\"fps_form_any_other_illness\" = 'Yes' THEN 1
                     WHEN fps.\"fps_form_any_other_illness\" = 'No' THEN 0
                 ELSE NULL END) :: BOOLEAN AS \"Any other illness?\",
                
            max(fps.\"fps_form_clinical_history\") AS \"Clinical History\",
            max(fps.\"fps_form_hiv_infection\") AS \"HIV infection?\",
            max(fps.\"fps_form_diagnosed_when\") AS \"Diagnosed when?\",
            max(fps.\"fps_form_recent_cd4_cell_count\") AS \"Recent CD4 cell count\",  
            
            max(CASE WHEN fps.\"fps_form_currently_receiving_art\" = 'Yes' THEN 1
                    WHEN fps.\"fps_form_currently_receiving_art\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Currently receiving ART?\",    
           
           max(CASE WHEN fps.\"fps_form_in_the_past_included_in_pmtct_program\" = 'Yes' THEN 1
                WHEN fps.\"fps_form_in_the_past_included_in_pmtct_program\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"In the past included in PMTCT program?\",
          
           max(CASE WHEN fps.\"fps_form_is_the_client_taking_any_medications\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_is_the_client_taking_any_medications\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Is the client taking any medications\",
            
            max(CASE WHEN fps.\"fps_form_did_the_client_have_any_surgical_operation\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_did_the_client_have_any_surgical_operation\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Did the client have any surgical operation?\",
              
            CASE WHEN string_agg(CASE WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Heart' THEN 'Heart' 
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Lung' THEN 'Lung'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Abdomen' THEN 'Abdomen'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Head, neck, mouth, throat, ears' THEN 'Head, neck, mouth, throat, ears'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Limbs' THEN 'Limbs'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Breasts' THEN 'Breasts'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Skin' THEN 'Skin'
                END ,', ') IS NOT NULL THEN 1
                ELSE 0 END :: BOOLEAN AS \"General clinical examination\",
          
         
        max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_weight IS NOT NULL 
                    THEN fps.fps_form_weight
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_weight IS NOT NULL 
                    THEN fpc.fp_continuation_weight
              ELSE 
                  fpcounselling.fp_counselling_only_weight
         END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_weight IS NOT NULL 
              THEN fpc.fp_continuation_weight
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_weight IS NOT NULL 
              THEN fps.fps_form_weight
              ELSE 
                fpcounselling.fp_counselling_only_weight
              END 
      ELSE
         CASE WHEN fpcounselling.fp_counselling_only_weight IS NOT NULL 
              THEN fpcounselling.fp_counselling_only_weight
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_weight IS NOT NULL 
              THEN fps.fps_form_weight
              ELSE 
                  fpc.fp_continuation_weight
              END
      END) AS \"Weight\",
        max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_bp_systolic IS NOT NULL 
              THEN fps.fps_bp_systolic
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_bp_systolic IS NOT NULL 
              THEN fpc.fp_continuation_bp_systolic
              ELSE 
                  fpcounselling.fps_counselling_only_bp_systolic
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_bp_systolic IS NOT NULL 
              THEN fpc.fp_continuation_bp_systolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_bp_systolic IS NOT NULL 
              THEN fps.fps_bp_systolic
              ELSE 
                fpcounselling.fps_counselling_only_bp_systolic
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_bp_systolic IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_bp_systolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' ) AND fps.fps_bp_systolic IS NOT NULL 
              THEN fps.fps_bp_systolic
              ELSE 
                  fpc.fp_continuation_bp_systolic
              END
      END) AS \"BP Systolic\",
      
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_bp_diastolic IS NOT NULL 
              THEN fps.fps_bp_diastolic
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_bp_diastolic IS NOT NULL 
              THEN fpc.fp_continuation_bp_diastolic
              ELSE 
                  fpcounselling.fps_counselling_only_bp_diastolic
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_bp_diastolic IS NOT NULL 
              THEN fpc.fp_continuation_bp_diastolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_bp_diastolic IS NOT NULL 
              THEN fps.fps_bp_diastolic
              ELSE 
                fpcounselling.fps_counselling_only_bp_diastolic
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_bp_diastolic IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_bp_diastolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' ) AND fps.fps_bp_diastolic IS NOT NULL 
              THEN fps.fps_bp_diastolic
              ELSE 
                  fpc.fp_continuation_bp_diastolic
              END
      END) AS \"BP Diastolic\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_temp IS NOT NULL 
              THEN fps.fps_form_temp
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_cont_form_temperature IS NOT NULL 
              THEN fpc.fp_cont_form_temperature
              ELSE 
                  fpcounselling.fp_couns_form_temperature
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_cont_form_temperature IS NOT NULL 
              THEN fpc.fp_cont_form_temperature
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_temp IS NOT NULL 
              THEN fps.fps_form_temp
              ELSE 
                fpcounselling.fp_couns_form_temperature
              END 
      ELSE
         CASE WHEN fpcounselling.fp_couns_form_temperature IS NOT NULL 
              THEN fpcounselling.fp_couns_form_temperature
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_temp IS NOT NULL 
              THEN fps.fps_form_temp
              ELSE 
                  fpc.fp_cont_form_temperature
              END
      END) AS \"Temperature\",
         
           max(fps.\"fps_form_p\") AS \"P\",
           max(fps.\"fps_form_r\") AS \"R\",
            
           max(CASE WHEN  fps.\"fps_form_genital_examination_does_the_client_have_any_of_th\" IS NOT NULL THEN 
                (SELECT string_agg (
                                CASE WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'FPS FORM,Vulvar warts' THEN 'Vulvar warts' 
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th  = 'FPS FORM,Genital ulcer' THEN 'Genital ulcer'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'FPS FORM,lesions syndrome' THEN 'lesions syndrome'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'FPS FORM,Vaginal Discharge syndrome' THEN 'Vaginal Discharge syndrome'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th  ='FPS FORM,PID' THEN 'PID'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE NULL
                END ) AS \"Genital examination: Does the client have any of the following conditions?\",
          
         max(fps.\"fps_form_uterus_size\") AS \"Uterus Size\",
         max(fps.\"fps_form_uterus_position\") AS \"Uterus Position\",
         max(fps.\"fps_form_adnexae_comment\") AS \"Adnexae (comment)\",
         max(fps.fps_form_diagnosis) AS \"Diagnosis\",
         
         string_agg(CASE WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Injectable (Petogen)' THEN 'Injectables'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Vasectomy' THEN 'Vasectomy'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                END ,', ') AS \"Preferred method (state)\",
         
          max(CASE WHEN fps.\"fps_form_changing_state\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_changing_state\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Changing State\",
           
          max(CASE WHEN fps.\"fps_form_medically_eligible\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_medically_eligible\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Medically eligible\",
           
          CASE WHEN max(fps.\"fps_form_pregnancy_test\") ='Yes' THEN 1 
              WHEN max(fps.\"fps_form_pregnancy_test\") ='No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Pregnancy test (Negative/positive)\", 
          
          max(fps.fps_form_if_yes_for_pregnancy_test) AS \"Result of Pregnancy test\" ,
      
            max(CASE WHEN  fps.fps_form_method_issued_and_or_administered IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,'01-01-0001 00:00:00' )
             THEN 
                  CASE WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Injectable (Petogen)' THEN 'Injectable'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Vasectomy' THEN 'Vasectomy'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                  END 
             WHEN  fps.fps_form_method_issued_and_or_administered IS NULL 
             THEN  
                  CASE WHEN  fps_continuation_method_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps_continuation_method_administered ='Injectables' THEN ' Injectables'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                       WHEN  fps_continuation_method_administered ='IUCD' THEN 'IUCD'
                       WHEN  fps_continuation_method_administered ='TUBAL LIGATION' THEN 'TUBAL LIGATION'
                       WHEN  fps_continuation_method_administered = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps_continuation_method_administered = 'Condoms' THEN 'Condoms'
                  END 
                  
             WHEN fps_continuation_method_administered IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN 
                 CASE WHEN  fps_continuation_method_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps_continuation_method_administered ='Injectables' THEN ' Injectables'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                       WHEN  fps_continuation_method_administered ='IUCD' THEN 'IUCD'
                       WHEN  fps_continuation_method_administered ='TUBAL LIGATION' THEN 'TUBAL LIGATION'
                       WHEN  fps_continuation_method_administered = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps_continuation_method_administered = 'Condoms' THEN 'Condoms'
                  END 
             WHEN  fps_continuation_method_administered IS NULL 
             THEN 
                 CASE WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Injectable (Petogen)' THEN 'Injectable'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Vasectomy' THEN 'Vasectomy'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                  END 
             ELSE NULL
         END) AS \"Method issued and/or administered\",
         
          max(CASE WHEN fps.\"fps_form_dual_protection_discussed\" = 'Yes' THEN 1
                WHEN fps.\"fps_form_dual_protection_discussed\" = 'No' THEN 0
            ELSE NULL END) :: BOOLEAN AS \"Dual Protection discussed\",
          
          max(fps.\"fps_form_name_of_counselor\") AS \"Name of Counselor\",
          max(CASE WHEN fps.\"fps_form_device_removal\" = 'Yes' THEN 1
                WHEN fps.\"fps_form_device_removal\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Device removal\",
         
          max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
              AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
          THEN
          CASE WHEN fps.fps_form_fp_type IS NOT NULL 
              THEN 
                CASE WHEN fps.fps_form_fp_type = 'FPS FORM,Implanon' THEN 'Implanon'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Jadelle' THEN 'Jadelle'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Copper T' THEN 'Copper T'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                     END
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fps_continuation_removal_method IS NOT NULL 
              THEN 
                  CASE WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN fpc.fps_continuation_removal_method = 'IUCD' THEN 'IUCD'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                  END

              ELSE 
                  
                  CASE WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Implanon' THEN 'Implanon'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Jadelle' THEN 'Jadelle'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Copper T' THEN 'Copper T'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,LNG-IUS' THEN 'LNG-IUS'
                  END
              END 
            
       WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fps_continuation_removal_method IS NOT NULL 
              THEN 
                  CASE WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN fpc.fps_continuation_removal_method = 'IUCD' THEN 'IUCD'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                  END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_fp_type IS NOT NULL 
              THEN 
                  CASE WHEN fps.fps_form_fp_type = 'FPS FORM,Implanon' THEN 'Implanon'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Jadelle' THEN 'Jadelle'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Copper T' THEN 'Copper T'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                     END
              ELSE 
                CASE WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Implanon' THEN 'Implanon'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Jadelle' THEN 'Jadelle'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Copper T' THEN 'Copper T'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,LNG-IUS' THEN 'LNG-IUS'
                  END
              END 
      ELSE
         CASE WHEN fpcounselling.fp_counselling_only_fp_type IS NOT NULL 
              THEN 
                  CASE WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Implanon' THEN 'Implanon'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Jadelle' THEN 'Jadelle'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Copper T' THEN 'Copper T'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,LNG-IUS' THEN 'LNG-IUS'
                  END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_fp_type IS NOT NULL 
              THEN 
                 CASE WHEN fps.fps_form_fp_type = 'FPS FORM,Implanon' THEN 'Implanon'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Jadelle' THEN 'Jadelle'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Copper T' THEN 'Copper T'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                     END
              ELSE 
                  CASE WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN fpc.fps_continuation_removal_method = 'IUCD' THEN 'IUCD'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                  END
              END
      END) AS \"FP type\",
   
     max(CASE WHEN  fps.fps_form_expiry_date IS NOT NULL AND (COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' ))
             THEN fps.fps_form_expiry_date
             WHEN  fps.fps_form_expiry_date IS NULL 
             THEN  fpc.fp_continuation_expiry_date_of_the_method_given
             WHEN fpc.fp_continuation_expiry_date_of_the_method_given IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_expiry_date_of_the_method_given
             WHEN  fpc.fp_continuation_expiry_date_of_the_method_given IS NULL 
             THEN fps.fps_form_expiry_date
             ELSE NULL
         END) AS \"Expiry Date\",

       max(CASE WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Expired' THEN 'Expired' 
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Desire TO be pregnant' THEN 'Desire TO be pregnant'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Health concerns' THEN 'Health concerns'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Complications' THEN 'Complications'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'Other' THEN 'Other'
                END) AS \"State reason for removal\",
      
      max(CASE WHEN fps.\"fps_form_device_inserted_by\" = 'FPS FORM,PSI/PSF' THEN 'PSI/PSF' 
                      WHEN fps.\"fps_form_device_inserted_by\" = 'Other' THEN 'Other'
                      WHEN fps.\"fps_form_device_inserted_by\" = 'UNKNOWN' THEN 'UNKNOWN'
                END ) AS \"Device Inserted by\",
      
      max(CASE WHEN  fps.fp_initial_form_state_procedure IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fp_initial_form_state_procedure
             WHEN  fps.fp_initial_form_state_procedure IS NULL 
             THEN  fpc.fps_continuation_state_procedure
             WHEN fpc.fps_continuation_state_procedure IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fps_continuation_state_procedure
             WHEN  fpc.fps_continuation_state_procedure IS NULL 
             THEN fps.fp_initial_form_state_procedure
             ELSE NULL
         END) AS \"State Procedure\",          
      
      max(CASE WHEN  fps.fps_form_date_of_procedure_indicate IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_date_of_procedure_indicate
             WHEN  fps.fps_form_date_of_procedure_indicate IS NULL 
             THEN  fpc.fp_continuation_date_of_procedure_indicate
             WHEN fpc.fp_continuation_date_of_procedure_indicate IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_date_of_procedure_indicate
             WHEN  fpc.fp_continuation_date_of_procedure_indicate IS NULL 
             THEN fps.fps_form_date_of_procedure_indicate
             ELSE NULL
         END) AS \"Date of Procedure indicate\",
         
       max(CASE WHEN  fps_form_pre_procedure_counseling_and_assessment_conducted IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' )
             THEN 
                  CASE WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'No' THEN 0
                    ELSE NULL END
             WHEN  fps_form_pre_procedure_counseling_and_assessment_conducted IS NULL 
             THEN  
                 CASE WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'Yes' THEN 1
                       WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'No' THEN 0
                  ELSE NULL END 
             WHEN fp_continuation_pre_procedure_counseling_and_assessment_con IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN 
                 CASE WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'Yes' THEN 1
                       WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'No' THEN 0
                  ELSE NULL END  
             WHEN  fp_continuation_pre_procedure_counseling_and_assessment_con IS NULL 
             THEN 
                CASE WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'No' THEN 0
                    ELSE NULL END
             ELSE NULL
         END) :: BOOLEAN AS \"Pre-Procedure counseling and assessment conducted?\",

             
         max(CASE WHEN  fps_form_indicate_name_of_counselor IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' )
             THEN fps.fps_form_indicate_name_of_counselor
             WHEN  fps.fps_form_indicate_name_of_counselor IS NULL 
             THEN  fpc.fp_continuation_indicate_name_of_counselor
             WHEN fpc.fp_continuation_indicate_name_of_counselor IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_indicate_name_of_counselor
             WHEN  fpc.fp_continuation_indicate_name_of_counselor IS NULL 
             THEN fps.fps_form_indicate_name_of_counselor
             ELSE NULL
         END) AS \"Indicate name of counsellor\",
         
         max(CASE WHEN  fps.fps_form_start_of_procedure_indicate_time IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_start_of_procedure_indicate_time
             WHEN  fps.fps_form_start_of_procedure_indicate_time IS NULL 
             THEN  fpc.fp_cont_form_start_of_procedure_indicate_time
             WHEN fpc.fp_cont_form_start_of_procedure_indicate_time IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_cont_form_start_of_procedure_indicate_time
             WHEN  fpc.fp_cont_form_start_of_procedure_indicate_time IS NULL 
             THEN fps.fps_form_start_of_procedure_indicate_time
             ELSE NULL
         END) AS \"Start of procedure indicate time\",
         
         max(CASE WHEN  fps.fps_form_end_of_procedure_indicate_time IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_end_of_procedure_indicate_time
             WHEN  fps.fps_form_end_of_procedure_indicate_time IS NULL 
             THEN  fpc.fp_cont_form_end_of_procedure_indicate_time
             WHEN fpc.fp_cont_form_end_of_procedure_indicate_time IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_cont_form_end_of_procedure_indicate_time
             WHEN  fpc.fp_cont_form_end_of_procedure_indicate_time IS NULL 
             THEN fps.fps_form_end_of_procedure_indicate_time
             ELSE NULL
         END) AS \"End of procedure, indicate time\",
         
         
         max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN  fps.fps_form_complications_during_insertions IS NOT NULL 
              THEN 
                  CASE WHEN  fps.fps_form_complications_during_insertions = 'Yes' THEN 1
                       WHEN  fps.fps_form_complications_during_insertions = 'No' THEN 0
                    ELSE NULL END
                    
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fp_continuation_complications_during_insertions IS NOT NULL 
              THEN 
                 CASE WHEN fp_continuation_complications_during_insertions = 'Yes' THEN 1
                       WHEN fp_continuation_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END 
              ELSE 
                 CASE WHEN fps_counselling_only_complications_during_insertions = 'Yes' THEN 1
                      WHEN  fps_counselling_only_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END 
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fp_continuation_complications_during_insertions IS NOT NULL 
              THEN 
                   CASE WHEN fp_continuation_complications_during_insertions = 'Yes' THEN 1
                       WHEN fp_continuation_complications_during_insertions = 'No' THEN 0
                   ELSE NULL END  
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_complications_during_insertions IS NOT NULL 
              THEN 
                     CASE WHEN  fps.fps_form_complications_during_insertions = 'Yes' THEN 1
                       WHEN  fps.fps_form_complications_during_insertions = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                CASE WHEN  fps_counselling_only_complications_during_insertions = 'Yes' THEN 1
                     WHEN  fps_counselling_only_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END 
              END 
      ELSE
         CASE WHEN fps_counselling_only_complications_during_insertions IS NOT NULL 
              THEN 
                  CASE WHEN fps_counselling_only_complications_during_insertions = 'Yes' THEN 1
                       WHEN fps_counselling_only_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END 
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_complications_during_insertions IS NOT NULL 
              THEN 
                 CASE WHEN  fps.fps_form_complications_during_insertions = 'Yes' THEN 1
                       WHEN fps.fps_form_complications_during_insertions = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                 CASE WHEN  fp_continuation_complications_during_insertions = 'Yes' THEN 1
                     WHEN  fp_continuation_complications_during_insertions  = 'No' THEN 0
                  ELSE NULL END  
              END
      END) :: BOOLEAN AS \"Complications during insertions\",
      
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_if_complication_is_yes IS NOT NULL 
              THEN fps.fps_form_if_complication_is_yes
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fps_continuation_if_yes_select_the_complications IS NOT NULL 
              THEN fpc.fps_continuation_if_yes_select_the_complications
              ELSE 
                  fpcounselling.fps_counselling_only_if_complication_is_yes
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fps_continuation_if_yes_select_the_complications IS NOT NULL 
              THEN fpc.fps_continuation_if_yes_select_the_complications
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_if_complication_is_yes IS NOT NULL 
              THEN fps.fps_form_if_complication_is_yes
              ELSE 
                fpcounselling.fps_counselling_only_if_complication_is_yes
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_if_complication_is_yes IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_if_complication_is_yes
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_if_complication_is_yes IS NOT NULL 
              THEN fps.fps_form_if_complication_is_yes
              ELSE 
                  fpc.fps_continuation_if_yes_select_the_complications
              END
      END) AS \"if yes,select the complication\",
      
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN  fps.\"fps_form_adverse_event\" IS NOT NULL 
              THEN 
                  CASE WHEN  fps.\"fps_form_adverse_event\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_adverse_event\" = 'No' THEN 0
                    ELSE NULL END
                    
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_adverse_event IS NOT NULL 
              THEN 
                 CASE WHEN fpc.fp_continuation_adverse_event = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_adverse_event = 'No' THEN 0
                  ELSE NULL END 
              ELSE 
                 CASE WHEN fps_counselling_only_adverse_event = 'Yes' THEN 1
                      WHEN  fps_counselling_only_adverse_event = 'No' THEN 0
                  ELSE NULL END 
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_adverse_event IS NOT NULL 
              THEN 
                   CASE WHEN fpc.fp_continuation_adverse_event = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_adverse_event = 'No' THEN 0
                   ELSE NULL END  
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\" IS NOT NULL 
              THEN 
                     CASE WHEN  fps.\"fps_form_adverse_event\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_adverse_event\" = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                CASE WHEN  fps_counselling_only_adverse_event = 'Yes' THEN 1
                     WHEN  fps_counselling_only_adverse_event = 'No' THEN 0
                  ELSE NULL END 
              END 
      ELSE
         CASE WHEN fps_counselling_only_adverse_event IS NOT NULL 
              THEN 
                  CASE WHEN fps_counselling_only_adverse_event = 'Yes' THEN 1
                       WHEN fps_counselling_only_adverse_event = 'No' THEN 0
                  ELSE NULL END 
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\"  IS NOT NULL 
              THEN 
                 CASE WHEN  fps.\"fps_form_adverse_event\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_adverse_event\" = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                 CASE WHEN  fpc.fp_continuation_adverse_event = 'Yes' THEN 1
                     WHEN  fpc.fp_continuation_adverse_event  = 'No' THEN 0
                  ELSE NULL END  
              END
      END) :: BOOLEAN AS \"Adverse Event\",
      
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_if_yes_select_the_adverse_event IS NOT NULL 
              THEN fps.fps_form_if_yes_select_the_adverse_event
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_if_yes_select_the_adverse_event IS NOT NULL 
              THEN fpc.fp_continuation_if_yes_select_the_adverse_event
              ELSE 
                  fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_if_yes_select_the_adverse_event IS NOT NULL 
              THEN fpc.fp_continuation_if_yes_select_the_adverse_event
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_if_yes_select_the_adverse_event IS NOT NULL 
              THEN fps.fps_form_if_yes_select_the_adverse_event
              ELSE 
                fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_if_yes_select_the_adverse_event IS NOT NULL 
              THEN fps.fps_form_if_yes_select_the_adverse_event
              ELSE 
                  fpc.fp_continuation_if_yes_select_the_adverse_event
              END
      END) AS \"if yes,select the adverse event\",
      
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_procedure_done_by IS NOT NULL 
              THEN fps.fps_form_procedure_done_by
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_procedure_done_by_name_of_counsellor IS NOT NULL 
              THEN fpc.fp_continuation_procedure_done_by_name_of_counsellor
              ELSE 
                  fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_procedure_done_by_name_of_counsellor IS NOT NULL 
              THEN fpc.fp_continuation_procedure_done_by_name_of_counsellor
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_procedure_done_by IS NOT NULL 
              THEN fps.fps_form_procedure_done_by
              ELSE 
                fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_procedure_done_by IS NOT NULL 
              THEN fps.fps_form_procedure_done_by
              ELSE 
                  fpc.fp_continuation_procedure_done_by_name_of_counsellor
              END
      END) AS \"Procedure done by\",
      
      CASE WHEN max(fps.\"fps_form_condoms_given\") IN ('Male', 'Female') THEN 1 
           WHEN max(fps.\"fps_form_condoms_given\") ='FPS FORM,Not Given' THEN 0
      ELSE NULL END :: BOOLEAN AS \"Condoms given\" ,
  
      max(CASE WHEN  fps.fps_form_batch_number IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_batch_number
             WHEN  fps.fps_form_batch_number IS NULL 
             THEN  fpc.fp_continuation_batch_number_of_the_method_given
             WHEN fpc.fp_continuation_batch_number_of_the_method_given IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_batch_number_of_the_method_given
             WHEN  fpc.fp_continuation_batch_number_of_the_method_given IS NULL 
             THEN fps.fps_form_batch_number
             ELSE NULL
         END) AS \"Batch Number\",
         
       


         max(CASE WHEN  fps.fps_form_manufacture IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,'01-01-0001 00:00:00' )
             THEN  fps.fps_form_manufacture
             WHEN  fps.fps_form_manufacture IS NULL 
             THEN  fpc.fp_continuation_manufacturer_of_the_method_given
             WHEN fpc.fp_continuation_manufacturer_of_the_method_given IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_manufacturer_of_the_method_given
             WHEN  fpc.fp_continuation_manufacturer_of_the_method_given IS NULL 
             THEN fps.fps_form_manufacture
             ELSE NULL
         END) AS \"Manufacture\",

         max(fps.fps_form_treatment) AS \"Treatment\",
         
          max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.\"fps_form_referred_out\" IS NOT NULL 
              THEN 
                  CASE WHEN fps.\"fps_form_referred_out\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referred_out\" = 'No' THEN 0
                    ELSE NULL END
                    
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fp_continuation_referred_out IS NOT NULL 
              THEN 
                 CASE WHEN fpc.fp_continuation_referred_out = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_referred_out = 'No' THEN 0
                  ELSE NULL END 
              ELSE 
                 CASE WHEN fps_counselling_only_referred_out = 'Yes' THEN 1
                      WHEN  fps_counselling_only_referred_out = 'No' THEN 0
                  ELSE NULL END 
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fp_continuation_referred_out IS NOT NULL 
              THEN 
                   CASE WHEN fpc.fp_continuation_referred_out = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_referred_out = 'No' THEN 0
                   ELSE NULL END  
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\" IS NOT NULL 
              THEN 
                    CASE WHEN fps.\"fps_form_referred_out\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referred_out\" = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                CASE WHEN  fps_counselling_only_referred_out = 'Yes' THEN 1
                     WHEN  fps_counselling_only_referred_out = 'No' THEN 0
                  ELSE NULL END 
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_referred_out IS NOT NULL 
              THEN 
                  CASE WHEN fps_counselling_only_referred_out = 'Yes' THEN 1
                       WHEN fps_counselling_only_referred_out = 'No' THEN 0
                  ELSE NULL END 
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\"  IS NOT NULL 
              THEN 
                CASE WHEN fps.\"fps_form_referred_out\" = 'Yes' THEN 1
                      WHEN fps.\"fps_form_referred_out\" = 'No' THEN 0
                  ELSE NULL END
              ELSE 
                 CASE WHEN  fpc.fp_continuation_referred_out = 'Yes' THEN 1
                     WHEN  fpc.fp_continuation_referred_out  = 'No' THEN 0
                  ELSE NULL END  
              END
      END) :: BOOLEAN AS \"Referred out?\",

       max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN
              CASE WHEN fps_form_indicate_where_client_was_referred_to  IS NOT NULL THEN 
              (SELECT string_agg (
                           CASE WHEN fps_form_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)' 
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Medical (state the problem)' THEN 'Medical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'                 
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND 
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
              WHEN  COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )  THEN
                         CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN 
                              (SELECT string_agg (
                                CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                          ELSE
                               CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN  
                                 (SELECT string_agg (
                                     CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC' 
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'               
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                               
                               ELSE 
                               NULL  END
                         END
              ELSE 
                  CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN  
                   (SELECT string_agg (
                                      CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC' 
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'     
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END       
               END 
               
         WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
                  AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN 
                  
                  CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN 
                       (SELECT string_agg (
                                 CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )
                  THEN
                  CASE WHEN fps_form_indicate_where_client_was_referred_to  IS NOT NULL THEN  
                (SELECT string_agg (
                           CASE WHEN fps_form_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)' 
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Medical (state the problem)' THEN 'Medical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'                 
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND 
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                  ELSE 
                               CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN  
                                 (SELECT string_agg (
                                       CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC' 
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'                                   
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                               ELSE 
                               NULL  END
                  END 
                  ELSE 
                  CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN 
                    (SELECT string_agg (
                                     
                                      CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC' 
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END 
                  END 
         ELSE 
             CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN 
             (SELECT string_agg (
                                     CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC' 
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'                        
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                                          
             WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )THEN
                 CASE WHEN fps_form_indicate_where_client_was_referred_to  IS NOT NULL THEN  
                 (SELECT string_agg (
                           CASE WHEN fps_form_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)' 
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Medical (state the problem)' THEN 'Medical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'                 
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND 
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE 
                        CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN  
                          (SELECT string_agg (
                                 CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                             ELSE NULL  END
                  END 
                  ELSE 
                  CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN  
                    (SELECT string_agg (
                                 CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  ELSE NULL END 
                  END 
             
END)  AS \"Indicate where client was referred to\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_reason_for_referral IS NOT NULL 
              THEN fps.fps_form_state_reason_for_referral
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_reason_for_referral IS NOT NULL 
              THEN fpc.fp_continuation_state_reason_for_referral
              ELSE 
                  fpcounselling.fps_counselling_only_state_reason_for_referral
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_state_reason_for_referral IS NOT NULL 
              THEN fpc.fp_continuation_state_reason_for_referral
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_reason_for_referral IS NOT NULL 
              THEN fps.fps_form_state_reason_for_referral
              ELSE 
                fpcounselling.fps_counselling_only_state_reason_for_referral
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_reason_for_referral IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_state_reason_for_referral
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_reason_for_referral IS NOT NULL 
              THEN fps.fps_form_state_reason_for_referral
              ELSE 
                  fpc.fp_continuation_state_reason_for_referral
              END
      END) AS \"State reason for Referral\",
      
     
       
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" IS NOT NULL 
              THEN 
                  CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'No' THEN 0
                    ELSE NULL END
                    
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fp_continuation_referral_slip_and_instructions_to_leave_sli IS NOT NULL 
              THEN 
                 CASE WHEN fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'No' THEN 0
                  ELSE NULL END 
              ELSE 
                 CASE WHEN fps_counselling_only_referral_slip_and_instructions_to_leav = 'Yes' THEN 1
                      WHEN  fps_counselling_only_referral_slip_and_instructions_to_leav = 'No' THEN 0
                  ELSE NULL END 
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fp_continuation_referral_slip_and_instructions_to_leave_sli IS NOT NULL 
              THEN 
                   CASE WHEN fp_continuation_referral_slip_and_instructions_to_leave_sli = 'Yes' THEN 1
                       WHEN fp_continuation_referral_slip_and_instructions_to_leave_sli = 'No' THEN 0
                   ELSE NULL END  
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" IS NOT NULL 
              THEN 
                    CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                CASE WHEN  fps_counselling_only_referral_slip_and_instructions_to_leav = 'Yes' THEN 1
                     WHEN  fps_counselling_only_referral_slip_and_instructions_to_leav = 'No' THEN 0
                  ELSE NULL END 
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_referral_slip_and_instructions_to_leav IS NOT NULL 
              THEN 
                  CASE WHEN fps_counselling_only_referral_slip_and_instructions_to_leav = 'Yes' THEN 1
                       WHEN fps_counselling_only_referral_slip_and_instructions_to_leav = 'No' THEN 0
                  ELSE NULL END 
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\"  IS NOT NULL 
              THEN 
                  CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'No' THEN 0
                    ELSE NULL END
              ELSE 
                 CASE WHEN  fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'Yes' THEN 1
                     WHEN  fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'No' THEN 0
                  ELSE NULL END  
              END
         END) :: BOOLEAN AS \"Referral slip and instructions to leave slip at the clinic given\",
         

         
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_review_date IS NOT NULL 
              THEN fps.fps_form_state_review_date
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_review_date IS NOT NULL 
              THEN fpc.fp_continuation_state_review_date
              ELSE 
                  fpcounselling.fps_counselling_only_state_review_date
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_state_review_date IS NOT NULL 
              THEN fpc.fp_continuation_state_review_date
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_review_date IS NOT NULL 
              THEN fps.fps_form_state_review_date
              ELSE 
                fpcounselling.fps_counselling_only_state_review_date
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_review_date IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_state_review_date
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_review_date IS NOT NULL 
              THEN fps.fps_form_state_review_date
              ELSE 
                  fpc.fp_continuation_state_review_date
              END
      END) AS \"State Review Date\",
      
      max(fps.fps_form_follow_up_visits) AS \"Follow up visits\",
         
        max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_the_surgical_problem IS NOT NULL 
              THEN fps.fps_form_state_the_surgical_problem
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_the_surgical_problem IS NOT NULL 
              THEN fpc.fp_continuation_state_the_surgical_problem
              ELSE 
                  fpcounselling.fps_counselling_only_state_the_surgical_problem
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_state_the_surgical_problem IS NOT NULL 
              THEN fpc.fp_continuation_state_the_surgical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_surgical_problem IS NOT NULL 
              THEN fps.fps_form_state_the_surgical_problem
              ELSE 
                fpcounselling.fps_counselling_only_state_the_surgical_problem
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_the_surgical_problem IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_state_the_surgical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_surgical_problem IS NOT NULL 
              THEN fps.fps_form_state_the_surgical_problem
              ELSE 
                  fpc.fp_continuation_state_the_surgical_problem
              END
      END) AS \"State the surgical problem\",
      
       max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_the_medical_problem IS NOT NULL 
              THEN fps.fps_form_state_the_medical_problem
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_the_medical_problem IS NOT NULL 
              THEN fpc.fp_continuation_state_the_medical_problem
              ELSE 
                  fpcounselling.fps_counselling_only_state_the_medical_problem
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_state_the_medical_problem IS NOT NULL 
              THEN fpc.fp_continuation_state_the_medical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_medical_problem IS NOT NULL 
              THEN fps.fps_form_state_the_medical_problem
              ELSE 
                fpcounselling.fps_counselling_only_state_the_medical_problem
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_the_medical_problem IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_state_the_medical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_medical_problem IS NOT NULL 
              THEN fps.fps_form_state_the_medical_problem
              ELSE 
                  fpc.fp_continuation_state_the_medical_problem
              END
      END) AS \"State the medical problem\",
      
         max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_the_gynaecological_problem IS NOT NULL 
              THEN fps.fps_form_state_the_gynaecological_problem
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_the_gynaecological_problem IS NOT NULL 
              THEN fpc.fp_continuation_state_the_gynaecological_problem
              ELSE 
                  fpcounselling.fps_counselling_only_state_the_gynaecological_problem
              END 
            
      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN 
         CASE WHEN fpc.fp_continuation_state_the_gynaecological_problem IS NOT NULL 
              THEN fpc.fp_continuation_state_the_gynaecological_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_gynaecological_problem IS NOT NULL 
              THEN fps.fps_form_state_the_gynaecological_problem
              ELSE 
                fpcounselling.fps_counselling_only_state_the_gynaecological_problem
              END 
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_the_gynaecological_problem IS NOT NULL 
              THEN fpcounselling.fps_counselling_only_state_the_gynaecological_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, 
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_gynaecological_problem IS NOT NULL 
              THEN fps.fps_form_state_the_gynaecological_problem
              ELSE 
                  fpc.fp_continuation_state_the_gynaecological_problem
              END
      END) AS \"State the gynaecological problem\",
      
      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN
              CASE WHEN fps_form_current_method  IS NOT NULL THEN 
              (SELECT string_agg (
                           CASE WHEN fps_form_current_method = 'New' THEN 'New' 
                                WHEN fps_form_current_method = 'Lapsed' THEN 'Lapsed'
                                WHEN fps_form_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                WHEN fps_form_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps_form_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps_form_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps_form_current_method = 'Injectables' THEN 'Injectables'
                                WHEN fps_form_current_method = 'IUCD' THEN 'IUCD'
                                WHEN fps_form_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                WHEN fps_form_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                WHEN fps_form_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps_form_current_method = 'Condoms' THEN 'Condoms'
                                WHEN fps_form_current_method = 'Others' THEN 'Others'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND 
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
              WHEN  COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )  THEN
                         CASE WHEN fp_continuation_current_method IS NOT NULL THEN 
                              (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New' 
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                          ELSE
                               CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN  
                                 (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New' 
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                               
                               ELSE 
                               NULL  END
                         END
              ELSE 
                  CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN  
                   (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New' 
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END       
               END 
               
         WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
                  AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN 
                  
                  CASE WHEN fp_continuation_current_method IS NOT NULL THEN 
                       (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New' 
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )
                  THEN
                  CASE WHEN fps_form_current_method  IS NOT NULL THEN  
                (SELECT string_agg (
                           CASE WHEN fps_form_current_method = 'New' THEN 'New' 
                                WHEN fps_form_current_method = 'Lapsed' THEN 'Lapsed'
                                WHEN fps_form_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                WHEN fps_form_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps_form_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps_form_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps_form_current_method = 'Injectables' THEN 'Injectables'
                                WHEN fps_form_current_method = 'IUCD' THEN 'IUCD'
                                WHEN fps_form_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                WHEN fps_form_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                WHEN fps_form_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps_form_current_method = 'Condoms' THEN 'Condoms'
                                WHEN fps_form_current_method = 'Others' THEN 'Others'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND 
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                  ELSE 
                               CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN  
                                 (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New' 
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                               ELSE 
                               NULL  END
                  END 
                  ELSE 
                  CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN 
                    (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New' 
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END 
                  END 
         ELSE 
             CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN 
             (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New' 
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                                          
             WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )THEN
                 CASE WHEN fps_form_current_method  IS NOT NULL THEN  
                 (SELECT string_agg (
                           CASE WHEN fps_form_current_method = 'New' THEN 'New' 
                                WHEN fps_form_current_method = 'Lapsed' THEN 'Lapsed'
                                WHEN fps_form_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                WHEN fps_form_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps_form_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps_form_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps_form_current_method = 'Injectables' THEN 'Injectables'
                                WHEN fps_form_current_method = 'IUCD' THEN 'IUCD'
                                WHEN fps_form_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                WHEN fps_form_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                WHEN fps_form_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps_form_current_method = 'Condoms' THEN 'Condoms'
                                WHEN fps_form_current_method = 'Others' THEN 'Others'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND 
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE 
                        CASE WHEN fp_continuation_current_method IS NOT NULL THEN  
                          (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New' 
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                             ELSE NULL  END
                  END 
                  ELSE 
                  CASE WHEN fp_continuation_current_method IS NOT NULL THEN  
                    (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New' 
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  ELSE NULL END 
                  END 
             
END)  AS \"Current Method\"



      
   
FROM
patient_encounter_table pedd 
    
    JOIN psi_patient_program_data ppv ON pedd.patient_id = ppv.patient_id
    JOIN patient_identifier pi ON ppv.patient_id = pi.patient_id
    JOIN person_details_default pdd ON ppv.patient_id = pdd.person_id
    LEFT OUTER JOIN fps_family_planning_service fps ON fps.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN fps_fp_continuation_form fpc ON fpc.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN fps_fp_counselling_only_form fpcounselling ON fpcounselling.encounter_id = pedd.encounter_id
    WHERE (ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'FPS Program')) 
    AND (pedd.encounter_id IN (SELECT encounter_id FROM fps_family_planning_service 
                                UNION SELECT encounter_id FROM fps_fp_continuation_form
                                UNION SELECT encounter_id FROM fps_fp_counselling_only_form))

    GROUP BY fps.id_fps_family_planning_service,fpc.id_fps_fp_continuation_form,fpcounselling.id_fps_fp_counselling_only_form 
    ORDER BY  date_created DESC;"
}
  ]
}